---
import SolidButton from "./SolidButton.astro";
import StrokeButton from "./StrokeButton.astro";

const { data } = Astro.props;
---

<article>
  <img class="card-img" src={data.img} alt=`Billede af ${data.titel}` />
  <div class="info">
    <h2>{data.activity}</h2>
    <div class="event-info">
      <div class="icon-grid">
        <img class="icon" src="imgs/ikoner/date.svg" alt="Dato ikon" />
        <p>{data.date}</p>
      </div>
      <div class="icon-grid">
        <img class="icon" src="imgs/ikoner/time.svg" alt="Tid ikon" />
        <p>{data.start} - {data.end}</p>
      </div>
      <div class="icon-grid">
        <img class="icon" src="imgs/ikoner/location.svg" alt="Lokation ikon" />
        <p>{data.location}</p>
      </div>
    </div>
    <div class="buttons">
      <div class="button">
        <StrokeButton variant="black-red" text="Læs mere" page="hold" link={`/hold#${data.activity === "Fredags Træning" || data.activity === "Søndags Træning" ? "ekstra-training" : data.activity.toLowerCase().replaceAll(" ", "-").replaceAll("æ", "ae").replaceAll("ø", "oe").replaceAll("å", "aa")}`} />

        <!-- Linket bruger "activity" fra databasen til at finde den korrekte hold-variant (slug), som matcher HoldCard-komponentens 'hold' prop på hold-siden.
     For 'Fredags Træning' og 'Søndags Træning' konverteres det til 'ekstra-training'.
     Ellers omdannes activity-teksten til et id-venligt format (små bogstaver, bindestreger og uden danske specialtegn). -->
      </div>
      <div id="rb" class="active">
        <SolidButton variant="red-black" text=`${data.book}` />
      </div>
      <div id="check" class="noshow">
        <SolidButton variant="check" text="✓" />
      </div>
    </div>
  </div>
</article>

<style>
  article {
    display: grid;
    background-color: white;
    margin: 30px 0 10px 0;
    border-radius: 0 20px 20px 20px;
  }

  .card-img {
    width: 100%;
  }
  .info {
    padding: 15px 15px;
  }
  h2 {
    text-transform: uppercase;
  }

  .event-info {
    display: grid;
    gap: 6px;
    margin: 0.5rem 0 0.8rem;
  }

  .icon {
    width: 18px;
    height: 18px;
  }

  .icon-grid {
    display: flex;
    gap: 10px;
  }

  .buttons {
    display: flex;
    justify-content: space-around;
  }
  .active {
    display: block;
  }

  .noshow {
    display: none;
  }
  p {
    font-size: 0.8rem;
  }

  @media (min-width: 900px) {
    .info {
      padding: 30px 25px;
    }
    .event-info {
      margin: 0.9rem 0 1.2rem;
      gap: 12px;
    }
    .icon {
      width: 30px;
      height: 30px;
    }

    p {
      font-size: 1.3rem;
    }

    .active,
    .button {
      width: 122px;
    }
  }
</style>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    console.log("Script kører, DOM klar");

    const rb = document.getElementById("rb");
    const check = document.getElementById("check");

    console.log("rb:", rb);
    console.log("check:", check);

    if (rb && check) {
      rb.addEventListener("click", () => {
        console.log("Klik på rb registreret");
        rb.classList.add("noshow"); // Tilføjer 'noshow'
        rb.classList.remove("active"); // Fjerner 'noshow'

        check.classList.remove("noshow"); // Fjerner 'noshow'
        check.classList.add("active"); // Tilføjer 'noshow'
      });
    }
  });
</script>
